# -*- coding: utf-8 -*-

"""
requests.hooks
~~~~~~~~~~~~~~

This module provides the capabilities for the Requests hooks system.

Available hooks:

``response``:
    The response generated from a Request.

"""
<<<<<<< HEAD


HOOKS = ['response']


def default_hooks():
    hooks = {}
    for event in HOOKS:
        hooks[event] = []
    return hooks
=======
HOOKS = ['response']

def default_hooks():
    return dict((event, []) for event in HOOKS)
>>>>>>> fe78b6a1d44e13e192ee18b9a76be07cff10532e

# TODO: response is the only one


def dispatch_hook(key, hooks, hook_data, **kwargs):
    """Dispatches a hook dictionary on a given piece of data."""
<<<<<<< HEAD

    hooks = hooks or dict()

    if key in hooks:
        hooks = hooks.get(key)

        if hasattr(hooks, '__call__'):
            hooks = [hooks]

=======
    hooks = hooks or dict()
    hooks = hooks.get(key)
    if hooks:
        if hasattr(hooks, '__call__'):
            hooks = [hooks]
>>>>>>> fe78b6a1d44e13e192ee18b9a76be07cff10532e
        for hook in hooks:
            _hook_data = hook(hook_data, **kwargs)
            if _hook_data is not None:
                hook_data = _hook_data
<<<<<<< HEAD

=======
>>>>>>> fe78b6a1d44e13e192ee18b9a76be07cff10532e
    return hook_data
